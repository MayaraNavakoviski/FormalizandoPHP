            Exercício 1:
   

      $numeros[3] = [1, 22, 333];
      
      for($i=0; $i < 3; $i++){
          print(numeros[$i], "-");
      }

               Memória:
              0 – 1 - 2

              Console:
             1 – 22 - 333


                  
                  Exercício 2:


       $sete_maravilhas[7] = [
           "Cristo Redentor",
           "Chichén Itzá",
           "Coliseu",
           "Muralha da China",
           "Petra",
           "Machu Picchu",
          "Taj Mahal"
       ];
       
       for($i=0; $i < 7; $i++){
           print($i+1, ": ", $sete_maravilhas[$i], "\n");
       }

                     Memória:
             0 - 1 - 2 - 3 - 4 - 5 - 6 

                     Console:
                1: Cristo Redentor
                2: Chichén Itzá
                3: Coliseu
                4: Muralha da China
                5: Petra
                6: Machu Picchu
                7: Taj Mahal


                 Exercício 3:


      $sete_maravilhas[7] = [
           "Cristo Redentor",
           "Chichén Itzá",
           "Coliseu",
           "Muralha da China",
           "Petra",
           "Machu Picchu",
           "Taj Mahal"
      ];
     
      $valor_buscado = "Coliseu";
     
      for($i=0; $i < 7; $i++){
          if ($sete_maravilhas[$i] == $valor_buscado) {
          print("o valor buscado está entre as maravilhas");
          break;
              }
          }
      }

               Memória:
              0 - 1 - 2

               Console:
             o valor buscado está entre as maravilhas


               Exercício 4:


      $mega_sena[6] = [33, 4, 47, 7, 11, 25];
      $aux = 0;
     
      for($i=0; $i < 6; $i++){
          for($j=0; $j < 5; $j++){
              if($mega_sena[$j] > $mega_sena[$j + 1]){
                 $aux = $mega_sena[$j]
                 $mega_sena[$j] = $mega_sena[$j + 1]
                 $mega_sena[$j + 1] = $aux
                }
           }
       }
       
        for($i=0; $i < 6; $i++){
           print($mega_sena[$i], " - ")
        }

                Memória:
             0 - 1 - 2 - 3 - 4 - 5 

                Console:
             4 - 7 - 11 - 25 - 33 - 47


                Exercício 5: 


      Escreva um algoritmo que leia uma matriz de inteiros com 3 linhas
   e 3 colunas, com valores já inicializados e mostre-os na tela,
   separando as linhas.

           $i = linha e $y = coluna

            <?php

                 $matriz[] = [
                      "1, 2, 3",
                      "4, 5, 6",
                      "7, 8, 9,"
                 ]

                for($i = 0; $i < 3; $i++){
                    for($y = 0; $y <3; $y++){
                        print($matriz[$i][$y] . " ");
                      }
                 }


               Exercício 6:

      Escreva um algoritmo que leia uma matriz de inteiros com 3 linhas
   e 3 colunas, com valores já inicializados, e mostre a soma na tela.

               <?php

                    $matriz[] = [
                      "1, 2, 3",
                      "4, 5, 6",
                      "7, 8, 9,"
                 ]

                     $soma_totla = 0;
                                       
                     for($i = 0; $i < 3; $i++){
                         for($y = 0; $y <3; $y++){
                             print($matriz[$i][$y] . " ");
                             $soma_total = $soma_total + $matriz[$i][$y];
                      }
                 }
                             print("A soma das linhas e das colunas é: " . $soma_total);


               Exercício 7:

      Escreva um algoritmo que leia uma matriz de inteiros com 3 linhas
   e 5 colunas com valores informados pelo usuário. Ao final, mostre:
   quais são os números pares digitados e a posição (linha, coluna) em
   que eles foram armazenados.

                 <?php

                     $matriz = [];

                     for($i = 0; $i < 3; $i++){
                         for($y = 0; $y < 3; $y++){
                             print("Informe um valor pra a posição [$i][$y]: ");
                             $matriz[$i][$y] = intval(readline());
                           }
                        }

                      print("Os números pares e suas posições: \n");

                      for($i = 0; $i < 3; $i++){
                          for($y = 0; $y < 3; $y++ ){
                              if($matriz[$i][$y] % 2 == 0){
                                 print($matriz[$i][$y] . " ");
                                 print("Número par na posição $i e $y\n");
                               }
                            }
                         }


               Exercício 8:

      Ao se executar o código abaixo, o que será mostrado no console?

        $lista_frutas = ['banana', 'abacaxi', 'melão', 'morango'];
        print "Teste 0: ";
         var_dump(count($lista_frutas));
        print "\nTeste 1: ";
         var_dump(in_array('banana', $lista_frutas));
        print "\nTeste 2: ";
          var_dump(in_array('alface', $lista_frutas));
        print "\nTeste 3: ";
           var_dump(array_search('morango', $lista_frutas));
        print "\nTeste 4: ";
           var_dump(sort($lista_frutas));
        print "\nTeste 5: ";
           var_dump(shuffle($lista_frutas));


      No console será mostrado:

            Teste 0: int(4)
            // var_dump: mostra informação da variavél - count: conta todos os elementos (neste exemplo retorna a quantidade de elementos que exite na lista, do tipo inteiro)
            Teste 1: bool(true)
            // var_dump: mostra informação da variavél - in_array: checa se um valor existe (neste exemplo procura um elemento, que é a "Banana" e que foi encontrado, então retorna true)
            Teste 2: bool(false)
            // var_dump: mostra informação da variavél - in_array: checa se um valor existe (neste exemplo procura um elemento, que é o "Alface" e que não foi encontrado, então retorna false)
            Teste 3: int(3) 
            // var_dump: mostra informação da variavél - array_search: retorna o valor que corresponde a chave procurada (neste exemplo procura o elemento "Morango" e retorna o valor que corresponde a seua chave )
            Teste 4:  bool(true) 
            // var_dump: mostra informação da variavél - sort: ordena os valores em ordem crescente (neste exemplo somente retorna true)
             Teste 5: bool(true) 
            // var_dump: mostra informação da variavél - shuffle: embaralha (neste exemplo somente retorna true)


                 Exercício 9:

     Ao se executar o código abaixo, o que será mostrado no console?
   
            $pessoa = [

              'nome' => 'John Doe',
              'idade' => 54,
              'altura' => 1.8,
              'formacao' => 'Físico',
              'profissao' => 'Astronauta',
            ];

             print "Teste 0: ";
              var_dump(count($pessoa));
             print "\nTeste 1: ";
              var_dump(in_array('Físico', $pessoa));
             print "\nTeste 2: ";
              var_dump(in_array('Detetive', $pessoa));
             print "\nTeste 3: ";
              var_dump(array_search('nome', $pessoa));
             print "\nTeste 4: ";
              var_dump(array_key_exists('profissao', $pessoa));
             print "\nTeste 5: ";
               var_dump(array_key_first($pessoa));
             print "\nTeste 6: ";
              var_dump(array_key_last($pessoa));
             print "\nTeste 7: ";
               var_dump(sort($pessoa));


    No console será mostrado:

       Teste 0: int(5)
       // var_dump: mostra informação da variavél - count: conta todos os elementos (neste exemplo retorna a quantidade de elementos que exite na lista, do tipo inteiro)
       Teste 1: bool(true)
       // var_dump: mostra informação da variavél - in_array: checa se um valor existe (neste exemplo procura um elemento, que é "Fisíco" e que foi encontrado, então retorna true)
       Teste 2: bool(false)
       // var_dump: mostra informação da variavél - in_array: checa se um valor existe (neste exemplo procura um elemento, que é o "Detetive" e que não foi encontrado, então retorna false)
       Teste 3: bool(false)
       // var_dump: mostra informação da variavél - array_search: retorna o valor que corresponde a chave procurada (Não sei porque retournou falso)
       Teste 4: bool(true)
       // var_dump: mostra informação da variavél - array_key_exists: verifica se a chave ou índice fornecido existe no array (neste exemplo procura o elemento "Profissão" e retorna true )
       Teste 5: string(4) "nome"
       // var_dump: mostra informação da variavél - array_key_first: obtém a primeira chave de um array (neste exemplo procura o elemento "Nome" e retorna o número de caractertes desta palavra )
       Teste 6: string(9) "profissao"
       // var_dump: mostra informação da variavél - array_key_last: obtém a última chave de um array (neste exemplo procura o último elemento  e retorna o número de caractertes do último elemento )
       Teste 7: bool(true)
      // var_dump: mostra informação da variavél - sort: ordena os valores em ordem crescente (neste exemplo somente retorna true)


               Exercício 10:

      Programe uma função em PHP que receba uma string e um caractere como
   parâmetros. A função deve modificar a string original, removendo todas as
   ocorrências desse caractere. O número de vezes que o caractere aparece na string
   deve ser contado. Tanto a String quanto o caractere devem ser recebidos como
   referência.

           <?php

                 print("Informe a frase que desejar: \n" );
                 readline($frase);

                 print("Informe um caractere que está presente na frase informada para remover: \n");
                 readline($carac);

                  print ("A frase a ser modificada é: " . $frase . "\n");
                  print ("O caractere a ser retirado é: " . $carac . "\n");

                   modificador($frase, $carac);

                   print "A frase informada ppassa a ser: " . $frase . "\n";

                   function modificador(&$string, &$carac) {
                                                
                            $quant_vezes_apareceu = substr_count($string, $carac);
                            $string = str_replace($carac, '', $string);
        
                             print ("A string apareceu " . $quant_vezes_apareceu  . " vezes." . "\n");
                     }

                  
